/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2021-03-27 06:56:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;

public final class checkcount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 String user_name=(String)session.getAttribute("luname");
String course_name=request.getParameter("c");


System.out.println(user_name);
System.out.println(course_name);
try
{
	Connection con=null;
	Class.forName("oracle.jdbc.driver.OracleDriver");
	System.out.println("Driver class loaded");
	con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","ep","ep");
	System.out.println("Connection Established");

PreparedStatement pst1=con.prepareStatement("select cid,cname from udemy where cname='"+course_name+"'");
ResultSet rs1=pst1.executeQuery();

PreparedStatement pst7=con.prepareStatement("select * from visitcount where cname='"+course_name+"'");
ResultSet rs7=pst7.executeQuery();
int count=0;
while(rs7.next())
{
count++;
}
rs1.next();

System.out.println(1);
System.out.println(count);

if(count==0)
{
  int id=rs1.getInt("cid");
  String str=rs1.getString("cname");
  PreparedStatement pst2=con.prepareStatement("insert into visitcount values(?,?,?,?)");
  pst2.setString(1,user_name);
  pst2.setInt(2,id);
  pst2.setString(3,str);
  pst2.setInt(4,0);
  pst2.execute();
}
System.out.println(3);


PreparedStatement pst=con.prepareStatement("select ccount from visitcount where uname='"+user_name+"'");
ResultSet rs=pst.executeQuery();
System.out.println(4);
rs.next();
int c=rs.getInt("ccount");

PreparedStatement pst3=con.prepareStatement("update visitcount set ccount="+c+"+1 where uname='"+user_name+"'");
pst3.executeUpdate();

System.out.println(7);

if((c+1)>1)
{
  
  PreparedStatement pst10=con.prepareStatement("select cid from visitcount where cname='"+course_name+"'");
  ResultSet rs9=pst10.executeQuery();
  rs9.next();
  int tid=rs9.getInt("cid");
  System.out.println("g"+tid);
  PreparedStatement pst4=con.prepareStatement("update udemy set ccost=ccost+50 where cname='"+course_name+"'");
  pst4.executeUpdate();
  PreparedStatement pst6=con.prepareStatement("select ccost from udemy where cname='"+course_name+"'");
  ResultSet rsf=pst6.executeQuery();
  rsf.next();
  out.println("Cost is:"+rsf.getInt("ccost"));
}
}
catch (Exception e)
{
  System.out.println(e);
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
